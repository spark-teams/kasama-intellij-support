{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Improve your coding habits with Kasama!  Track your coding sessions, test runs, VCS interactions, and many more.  <ul> <li> <p> Your fitness tracker for coding</p> <p>Keep track of your coding sessions in your IntelliJ IDE</p> </li> <li> <p> Discover your development patterns</p> <p>Analyze your coding habits, such as test runs, VCS interactions, refactorings, and many more</p> </li> <li> <p> Stats at your fingertips</p> <p>View the stats and charts directly in your IDE</p> </li> <li> <p> Privacy first</p> <p>No network required - the data is only stored on your disk, that's it</p> </li> </ul>"},{"location":"getting-started/","title":"Getting started","text":""},{"location":"getting-started/#installation","title":"Installation","text":"<p>Install the Kasama plugin from the JetBrains Marketplace. In ypur Jetbrains IDE, go to Settings... &gt; Plugins. Make sure the Marketplace tab is selected and type <code>Kasama</code> into the search box. Select the Kasama plugin from the results list and click Install. After installation, you have to restart the IDE in order to activate the plugin.</p> <p>After activation, Kasama immediately starts to record your activity.</p>"},{"location":"getting-started/#viewing-your-stats","title":"Viewing your stats","text":"<p>In your IDE, open the Kasama view by clicking on the Kasama view tab or navigation to View &gt; Tool Windows &gt; Kasama.</p> <p> </p> <p>In addition to the overview, Kasama provides different detail views which are described in the Concepts.</p>"},{"location":"license/","title":"End-user License Agreement","text":""},{"location":"license/#1-definitions","title":"1. Definitions","text":"<p>\"Confirmation\" means an email from JetBrains confirming Your rights to use a Paid Plugin and containing important information about Your license or Subscription.</p> <p>\"Developer\" means the author of Kasama, Spark Software Engineering GmbH, Alter Schlachthof 33, 76131 Karlsruhe, Germany.</p> <p>\"Documentation\" means the latest versions of all online technical documentation available for a Plugin at JetBrains Marketplace and any other relevant Plugin documentation provided either by JetBrains or the Developer that applies to the Plugin.</p> <p>\"Fallback Date\" means the date falling twelve (12) months prior to the date Your Subscription expired.</p> <p>\"Fallback Version\" means the most recent Plugin Version that the Developer made available for public purchase prior to the Fallback Date, along with any bug-fix updates for that Plugin Version. The Fallback Version does not include any Plugin updates or upgrades other than bug-fix updates that You may have used in the period between the Fallback Date and the expiration date of Your Subscription. For more information, see FAQ available at https://sales.jetbrains.com/hc/en-gb.</p> <p>\"Free Plugin\" means a Plugin that is offered at no cost.</p> <p>\"JetBrains\" means JetBrains s.r.o., which has its registered office at Na H\u0159ebenech II 1718/8, Prague, 14000, Czech Republic, registered with the Commercial Register kept by the Municipal Court of Prague, Section C, file 86211, ID.Nr.: 265 02 275.</p> <p>\"JetBrains Affiliate\" means the subsidiary and/or any associated companies of JetBrains.</p> <p>\"JetBrains Marketplace\" means any platform operated by JetBrains or a JetBrains Affiliate on which JetBrains or JetBrains Affiliate markets Plugins for JetBrains Products, including the website https://plugins.jetbrains.com and/or any other website or other platform, whether named JetBrains Marketplace, JetBrains Plugins Repository, or otherwise.</p> <p>\"JetBrains Product\" means any software program or service made available by JetBrains.</p> <p>\"Paid Plugin\" means a Plugin that is offered for a fee (can be either a one-time license fee or a recurring subscription fee).</p> <p>\"Plugin\" means any plugin, extension, application, widget, or other software program designed to work with JetBrains Products that the Developer makes available under this EULA.</p> <p>\"Plugin Users\" means users that are able to access and use the Plugin concurrently.</p> <p>\"Plugin Version\" means a release, update, or upgrade of a particular Plugin that is not identified by the Developer as being made for the purpose of fixing software bugs.</p> <p>\"Subscription\" means Your right to use a Paid Plugin during the Subscription Period.</p> <p>\"Subscription Period\" means the Subscription period described in Your Confirmation.</p> <p>\"You\" means an individual or an entity concluding this Standard EULA.</p>"},{"location":"license/#2-grant-of-license","title":"2. Grant of License","text":"<p>2.1. License. The Developer hereby grants You a limited, worldwide, non-exclusive, non-transferable license to use the Plugin (including any generally available updates and upgrades released during your rightful use of the Plugin) as long as the use is in line with Your Confirmation, the Documentation, and the limits set out in this Standard EULA. You may:</p> <p>a. install the Plugin;</p> <p>b. use the Plugin subject to the limits described in Your Confirmation (if any); and</p> <p>c. make backup copies of the Plugin for archival purposes.</p> <p>2.2. Restrictions. You may not modify, reverse-engineer, decompile, or disassemble the Plugin in whole or in part, or create any derivative works from the Plugin, or sublicense any rights to the Plugin, unless otherwise expressly authorized in writing by the Developer.</p> <p>2.3. Duration of License. The license granted under this EULA can be provided as:</p> <p>a. perpetual in case of Free Plugins or Paid Plugins for which You are charged a one-time license fee, and</p> <p>b. time-limited for the duration of your Subscription Period, in case of Paid Plugins for which You pay an annual or monthly Subscription fee.</p> <p>For more details about the type of Paid Plugin, see the information in Your Confirmation.</p>"},{"location":"license/#3-subscription","title":"3. Subscription","text":"<p>3.1. Subscription Limits. If You purchased a Plugin Subscription, You must use the Paid Plugin in accordance with the limits described in Your subscription plan (e.g., You must ensure that the maximum number of Plugin Users does not exceed the number of Plugin Users for which You have purchased the Subscription).</p> <p>3.2. Subscription Period. The Subscription Period can be either annual or monthly.</p> <p>3.3. Fallback License. If the Plugin is provided with a Fallback license according to the Confirmation, following the expiration of the Subscription Period without a renewal, Your license to use the Plugin as stipulated in Section 2 shall continue on a perpetual, royalty-free, non-exclusive, and non-transferable basis with respect to the Fallback Version of the Plugin (including all limitations). The granting of the Fallback license is expressly contingent upon Your compliance with this EULA, including Your payment of the applicable Subscription fees for at least the preceding 12 months in full and without interruptions.</p>"},{"location":"license/#4-intellectual-property","title":"4. Intellectual Property","text":"<p>The Plugin is protected by copyright and other intellectual property laws and treaties. The Developer or its licensors own all title, copyright, and other intellectual property rights to the Plugin.</p>"},{"location":"license/#5-disclaimer-of-warranty","title":"5. Disclaimer of Warranty","text":"<p>ALL PLUGINS ARE PROVIDED TO YOU ON AN \"AS-IS\" AND \"AS AVAILABLE\" BASIS WITHOUT WARRANTIES. YOUR USE OF PLUGINS IS AT YOUR OWN RISK. THE DEVELOPER PROVIDES NO WARRANTY AS TO THE PLUGIN'S USE OR PERFORMANCE. TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THE DEVELOPER DISCLAIMS ALL OTHER WARRANTIES AND CONDITIONS, EITHER EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE, AND NON-INFRINGEMENT, WITH REGARD TO THE PLUGIN, AND THE PROVISION OF OR FAILURE TO PROVIDE SUPPORT SERVICES. THE DEVELOPER DOES NOT WARRANT THAT THE PLUGIN IS ACCURATE, RELIABLE, OR CORRECT; THAT THE PLUGIN MEETS YOUR REQUIREMENTS; THAT THE PLUGIN WILL BE AVAILABLE AT ANY PARTICULAR TIME OR LOCATION, UNINTERRUPTED, OR SECURE; THAT ANY DEFECTS OR ERRORS WILL BE CORRECTED; OR THAT THE PLUGIN IS FREE OF VIRUSES OR OTHER HARMFUL COMPONENTS. EXCEPT AS REQUIRED BY APPLICABLE LAWS, ANY UPDATES AND UPGRADES TO THE PLUGIN WILL ONLY BE PROVIDED ON AN \"AS AVAILABLE\" BASIS, I.E., AT THE DEVELOPER\u2019S SOLE DISCRETION.</p>"},{"location":"license/#6-limitation-of-liability","title":"6. Limitation of Liability","text":"<p>IN NO EVENT WILL THE DEVELOPER BE LIABLE FOR ANY DIRECT OR INDIRECT COSTS, LOSSES, OR DAMAGES ASSOCIATED WITH THE USE OF THE DEVELOPER'S PLUGIN.</p> <p>THE DEVELOPER SHALL NOT BE LIABLE TO YOU FOR ANY LOST PROFITS OR CONSEQUENTIAL DAMAGES, NO MATTER THE CAUSE OF SAID PROFITS OR DAMAGES, AND IN NO EVENT WILL THE DEVELOPER'S AGGREGATE LIABILITY ARISING OUT OF OR RELATED TO THIS AGREEMENT OR THE USE OF THE PLUGIN EXCEED THE FEES WHICH YOU PAID FOR THE PLUGIN VIA JETBRAINS MARKETPLACE IN THE THREE-MONTH PERIOD PRECEDING THE CLAIM. THIS LIMITATION WILL APPLY EVEN IF THE DEVELOPER HAS BEEN ADVISED OF THE POSSIBILITY OF THE LIABILITY EXCEEDING THE AMOUNT AND NOTWITHSTANDING ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY. JETBRAINS' LIABILITY IS EXCLUDED IN ITS ENTIRETY AS JETBRAINS IS NOT A PARTY TO THE CONTRACTUAL RELATIONSHIP BETWEEN THE DEVELOPER AND YOU.</p>"},{"location":"troubleshooting/","title":"Troubleshooting","text":"<p>In case you experience problems with Kasama, you can find answers to specific problems below. If your problem persists, please open an issue.</p>"},{"location":"troubleshooting/#ide-logs","title":"IDE Logs","text":"<p>Kasama logs potential problems in the IDE log, which you can find at Help &gt; Open Log in Editor.</p>"},{"location":"troubleshooting/#kasama-plugin-not-started-failed-to-obtain-database-lock","title":"Kasama Plugin not started, failed to obtain database lock","text":"<p>You cannot use Kasama in multiple IDEs opened in parallel sharing the same Kasama database. Hence, on IDE startup, Kasama checks if the database is already used by a different IDE instance. In order to use Kasama in the second IDE instance, either close the other IDE or use a different data folder.</p> <p>To change the data folder, navigate to Settings... &gt; Tools &gt; Kasama. In the Advanved section, set a different data folder in the Data Folder field.</p> <p>Note that different locations of Kasama tracking data cannot be joined together at the moment.</p>"},{"location":"troubleshooting/#kasama-plugin-not-started-database-is-not-valid","title":"Kasama Plugin not started, database is not valid","text":"<p>This error means that the database is in an invalid state. This can occur, if a database is shared across different IDEs with different Kasama plugin installations, or if the file has been changed manually.</p> <p>Please use a different data folder path.</p> <p>If you think the invalid database is due to a bug, please open an issue.</p>"},{"location":"concepts/","title":"Concepts","text":"<p>Like a fitness tracker, Kasama helps you keeping an eye on your coding practices, such as coding sessions, testing habits, and many more:</p> <ul> <li>Coding sessions - how long are you active in the IDE and for which project?</li> <li>Modules - Kasama tracks in which modules you are active and how the activity is split between test code and production code.</li> <li>Version control (Git) interaction - Discover the frequency of your commits, the size of each commit, the longevity of your branches, and the types of branches you predominantly work on over time.</li> <li>Testing habits - Learn about your testing habits, including how frequently you run test suites, their failure rate, and their size.</li> <li>Refactoring usage - Find out which tool-driven refactorings you use and identify blind spots of lesser used refactorings.</li> </ul>"},{"location":"concepts/coding-sessions/","title":"Coding Sessions","text":"<p>A coding session is a continuous period of time during which you are active in the IDE. It starts automatically when UI activity is detected and ends when the IDE is idle for a certain amount of time (this can be configured in the settings), or when a break is started (can be configured under Digital Wellbeing).</p> <p>Coding sessions can be viewed in the Kasama View under Coding Sessions as a list or diagram view.</p> <p> </p> <p>In the list view, coding sessions can be edited and removed.</p> <p>When editing a coding session, the name and type can be set.</p> <p>The following types are currently available:</p> <ul> <li>Work</li> <li>Hobby</li> <li>Learning</li> <li>Coding Dojo</li> <li>Open Source</li> </ul> <p>If a type is set for a coding session, you can filter by type in the diagram view.</p>"},{"location":"concepts/modules/","title":"Modules","text":"<p>Kasama keeps track in which modules you are active.</p> <p>In the Kasama view under Modules, you can see the breakdown of the different modules. The view also displays the allocation between test code and production code.</p> <p>Kasama uses snapshots to detect the modules you are active in. If you are active in a certain module for a very short timespan (i.e. a few seconds), its activity might not be detected.</p> <p> </p>"},{"location":"concepts/refactorings/","title":"Refactorings","text":"<p>Refactorings play an essential role in software development. IDEs like IntelliJ provide a rich set of automated refactoring tools. However, most developers only use a small subset of them.</p> <p>In order to improve your refactoring skills, Kasama keeps track of the automated IDE refactorings you are using over the time. This helps you to discover some blind spots where you can actively try to use some kinds of refactorings more than before.</p> <p>The refactoring stats can be accessed in the Kasama view under Refactorings.</p> <p> </p>"},{"location":"concepts/test-runs/","title":"Test Runs","text":"<p>Writing and executing tests are crucial aspects of software development. To assist you in analyzing your testing methodology, Kasama tracks the executed test runs together with the number of failed and succeeded tests and test suites.</p> <p>Note</p> <p>Only test runs executed by an IntelliJ run config are monitored. Test runs executed directly on the command line are not monitored.</p> <p>You can see all information on the tracked test runs in the Kasama view under Test runs.</p> <p> </p>"},{"location":"concepts/vcs-interaction/","title":"VCS interaction","text":"<p>When you interact with the version control system, such as Git, Kasama tracks different stats for you. These can help you to improve your habits, for example if you aim for smaller, more frequent commits.</p> <p>Note</p> <p>Currently, Kasama VCS interaction tracking only supports Git. If you are working with a different version control system, please consider opening a feature request.</p>"},{"location":"concepts/vcs-interaction/#vcs-commits","title":"VCS Commits","text":"<p>Commits you are performing in the IDE (using the IntelliJ Commit dialog) are tracked by Kasama.</p> <p>Note</p> <p>Git commits executed directly on the command line are not monitored.</p> <p>The commits and related stats are shown in the VCS Commits diagram view.</p> <p> </p>"},{"location":"concepts/vcs-interaction/#vcs-branches","title":"VCS Branches","text":"<p>Kasama keeps track in which branches you are active.</p> <p>Kasama uses snapshots to detect the branches you are active in. If you are active in a certain branch for a very short timespan (i.e. a few seconds), its activity might not be detected.</p> <p>VCS branch stats can be viewed in the Kasama View under VCS Branches as a list or diagram view.</p> <p> </p> <p>In the list view, different actions can be performed.</p> <ul> <li>View Branch Timeline: Display a detail view on the branch timeline, including commits and logged work durations</li> <li> <p>Edit Branch Type: Set or change the branch type. If a type is set for a branch, you can filter by type in the diagram view. The following branch types are currently available:</p> <ul> <li>Feature </li> <li>Bugfix</li> <li>Hotfix</li> <li>Refactoring</li> <li>Main</li> <li>Testing</li> <li>Experimenting</li> <li>Maintenance</li> <li>Documentation</li> <li>Release</li> <li>Integration <p>Depending on the branch name, Kasama tries to infer the branch type automatically when encountering a new branch.</p></li> </ul> </li> <li> <p>Combine Branches Kasama does not track branch renamings.  If a branch is being renamed, the new branch might appear as a different branch. To address this issue, utilize this function by specifying the old branch to be incorporated into the desired new branch. All stats for the old branch (commits, durations) are being transferred to the new branch.</p> </li> </ul>"}]}